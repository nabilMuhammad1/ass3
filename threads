#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
int data[1000];
int chunk = 100;
void *
add (void *arg)
{
  int start = (int) arg;
  int end = start + chunk;
  int sum = 0, i = 0;
  for (i = 0; i < end; i++)
    {
      sum = sum + data[i];
    }
  return ((void *) sum);
}

int
main ()
{
  int status1, status2, status3, status4, status5, status6, status7, status8,
    status9, status10;
  pthread_t thread1, thread2, thread3, thread4, thread5, thread6, thread7,
    thread8, thread9, thread10;
  int i = 0;
  for (i = 0; i < 1000; i++)
    {
      data[i] = i;
    }
  pthread_create (&thread1, NULL, add, (void *) (0 * chunk));
  pthread_create (&thread2, NULL, add, (void *) (1 * chunk));
  pthread_create (&thread3, NULL, add, (void *) (2 * chunk));
  pthread_create (&thread4, NULL, add, (void *) (3 * chunk));
  pthread_create (&thread5, NULL, add, (void *) (4 * chunk));
  pthread_create (&thread6, NULL, add, (void *) (5 * chunk));
  pthread_create (&thread7, NULL, add, (void *) (6 * chunk));
  pthread_create (&thread8, NULL, add, (void *) (7 * chunk));
  pthread_create (&thread9, NULL, add, (void *) (8 * chunk));
  pthread_create (&thread10, NULL, add, (void *) (9 * chunk));

  pthread_join (thread1, (void **) &status1);
  pthread_join (thread2, (void **) &status2);
  pthread_join (thread3, (void **) &status3);
  pthread_join (thread4, (void **) &status4);
  pthread_join (thread5, (void **) &status5);
  pthread_join (thread6, (void **) &status6);
  pthread_join (thread7, (void **) &status7);
  pthread_join (thread8, (void **) &status8);
  pthread_join (thread9, (void **) &status9);
  pthread_join (thread10, (void **) &status10);

  int sum =
    status1 + status2 + status3 + status4 + status5 + status6 + status7 +
    status8 + status9 + status10;
  printf ("\nsum %d\n", sum);
  return 0;
}

